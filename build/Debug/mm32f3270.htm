<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [./build/Debug/mm32f3270.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ./build/Debug/mm32f3270.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Tue Oct 18 10:17:25 2022
<BR><P>
<H3>Maximum Stack Usage =        600 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; MenuOperator &rArr; PRP &rArr; ConfigInt &rArr; tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[62]">get_greatest_common_divisor</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">get_greatest_common_divisor</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1e]">CAN1_RX_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[43]">COMP1_2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel1_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel2_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel3_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[40]">DMA2_Channel4_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[41]">DMA2_Channel5_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[42]">ETH_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1f]">EXTI9_5_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[59]">EasyKeyInit</a> from easy_key.o(.text) referenced from menu.o(.text)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1d]">FlashCache_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[28]">I2C2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[44]">OTG_FS_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[30]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[57]">PidInit</a> from pid.o(.text) referenced from ctrl.o(.text)
 <LI><a href="#[f]">RCC_CRS_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[36]">SDIO_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from system_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[20]">TIM1_BRK_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[23]">TIM1_CC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[22]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[21]">TIM1_UP_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[24]">TIM2_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[25]">TIM3_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[26]">TIM4_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[31]">TIM8_BRK_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[34]">TIM8_CC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[33]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[32]">TIM8_UP_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2c]">UART2_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2d]">UART3_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[47]">UART8_IRQHandler</a> from isr.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[5c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f3277g.o(.text)
 <LI><a href="#[5e]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[4b]">cos</a> from cos.o(i.cos) referenced from zf_device_gps_tau1201.o(.text)
 <LI><a href="#[4f]">debug_assert_handler</a> from zf_common_debug.o(.text) referenced 5 times from zf_device_tft180.o(.text)
 <LI><a href="#[49]">debug_uart_str_output</a> from zf_common_debug.o(.text) referenced from zf_common_debug.o(.text)
 <LI><a href="#[5d]">fputc</a> from zf_common_debug.o(.text) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[4c]">get_parameter_index</a> from zf_device_gps_tau1201.o(.text) referenced from zf_device_gps_tau1201.o(.text)
 <LI><a href="#[58]">gpio_get_level</a> from zf_driver_gpio.o(.text) referenced from grayscale_sensor.o(.text)
 <LI><a href="#[51]">gpio_init</a> from zf_driver_gpio.o(.text) referenced 3 times from zf_device_tft180.o(.text)
 <LI><a href="#[48]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[55]">pwm_init</a> from zf_driver_pwm.o(.text) referenced from ctrl.o(.text)
 <LI><a href="#[56]">pwm_set_duty</a> from zf_driver_pwm.o(.text) referenced 3 times from ctrl.o(.text)
 <LI><a href="#[4a]">sin</a> from sin.o(i.sin) referenced from zf_device_gps_tau1201.o(.text)
 <LI><a href="#[50]">spi_write_8bit</a> from zf_driver_spi.o(.text) referenced 2 times from zf_device_tft180.o(.text)
 <LI><a href="#[4d]">system_delay</a> from zf_driver_delay.o(.text) referenced 4 times from zf_device_gps_tau1201.o(.text)
 <LI><a href="#[52]">tft180_clear</a> from zf_device_tft180.o(.text) referenced from zf_device_tft180.o(.text)
 <LI><a href="#[5a]">tft180_show_float</a> from zf_device_tft180.o(.text) referenced from menu.o(.text)
 <LI><a href="#[53]">tft180_show_string</a> from zf_device_tft180.o(.text) referenced 8 times from zf_device_tft180.o(.text)
 <LI><a href="#[54]">tft180_write_index</a> from zf_device_tft180.o(.text) referenced from zf_device_tft180.o(.text)
 <LI><a href="#[4e]">uart_write_buffer</a> from zf_driver_uart.o(.text) referenced from zf_device_gps_tau1201.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(.text)
</UL>
<P><STRONG><a name="[13d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[5f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[12b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[13f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[140]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[141]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[142]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[61]"></a>clock_init</STRONG> (Thumb, 492 bytes, Stack size 24 bytes, zf_common_clock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, zf_common_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[143]"></a>debug_assert_enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_common_debug.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>debug_assert_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_common_debug.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>debug_assert_handler</STRONG> (Thumb, 616 bytes, Stack size 368 bytes, zf_common_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_wave
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_rgb565_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_chinese
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_binary_image
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_quad_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>debug_log_handler</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, zf_common_debug.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[c9]"></a>debug_output_struct_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zf_common_debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
</UL>

<P><STRONG><a name="[6c]"></a>debug_output_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, zf_common_debug.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
</UL>

<P><STRONG><a name="[6b]"></a>debug_init</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, zf_common_debug.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_init
</UL>

<P><STRONG><a name="[71]"></a>fifo_head_offset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_fifo.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[74]"></a>fifo_end_offset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_fifo.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[145]"></a>fifo_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_common_fifo.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>fifo_used</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_common_fifo.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>fifo_write_buffer</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, zf_common_fifo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_enable
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_head_offset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>

<P><STRONG><a name="[73]"></a>fifo_read_buffer</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, zf_common_fifo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_end_offset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_read_buff
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_read_buff
</UL>

<P><STRONG><a name="[95]"></a>fifo_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_common_fifo.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_init
</UL>

<P><STRONG><a name="[62]"></a>get_greatest_common_divisor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_function.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[147]"></a>my_delay</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, zf_common_function.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>str_to_int</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
</UL>

<P><STRONG><a name="[bf]"></a>int_to_str</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_int
</UL>

<P><STRONG><a name="[148]"></a>str_to_uint</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, zf_common_function.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>uint_to_str</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, zf_common_function.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uint_to_str
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_uint
</UL>

<P><STRONG><a name="[75]"></a>str_to_float</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[7c]"></a>float_to_str</STRONG> (Thumb, 272 bytes, Stack size 88 bytes, zf_common_function.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = float_to_str &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpeq
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
</UL>

<P><STRONG><a name="[7f]"></a>str_to_double</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_float_number
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_double_number
</UL>

<P><STRONG><a name="[86]"></a>double_to_str</STRONG> (Thumb, 292 bytes, Stack size 112 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>

<P><STRONG><a name="[89]"></a>zf_sprintf</STRONG> (Thumb, 516 bytes, Stack size 96 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_reverse_order
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;number_conversion_ascii
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[72]"></a>interrupt_global_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[65]"></a>interrupt_global_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[d8]"></a>interrupt_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_camera_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_interrupt
</UL>

<P><STRONG><a name="[e8]"></a>interrupt_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_interrupt
</UL>

<P><STRONG><a name="[99]"></a>interrupt_set_priority</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = interrupt_set_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[63]"></a>interrupt_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[8c]"></a>bluetooth_ch9141_send_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>

<P><STRONG><a name="[8d]"></a>bluetooth_ch9141_send_buff</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_image
</UL>

<P><STRONG><a name="[8e]"></a>bluetooth_ch9141_send_string</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[8f]"></a>bluetooth_ch9141_send_image</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_buff
</UL>

<P><STRONG><a name="[90]"></a>bluetooth_ch9141_read_buff</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[91]"></a>bluetooth_ch9141_uart_callback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, zf_device_bluetooth_ch9141.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>

<P><STRONG><a name="[93]"></a>bluetooth_ch9141_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, zf_device_bluetooth_ch9141.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wireless_type
</UL>

<P><STRONG><a name="[149]"></a>camera_binary_image_decompression</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, zf_device_camera.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>camera_send_image</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, zf_device_camera.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>

<P><STRONG><a name="[98]"></a>camera_init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, zf_device_camera.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_set_priority
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_camera_init
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[9d]"></a>get_two_points_distance</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[a0]"></a>get_two_points_azimuth</STRONG> (Thumb, 344 bytes, Stack size 72 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[a3]"></a>gps_data_parse</STRONG> (Thumb, 884 bytes, Stack size 56 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_int
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parameter_index
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_float_number
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_double_number
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[ab]"></a>gps_uart_callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, zf_device_gps_tau1201.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gps_uart_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>gps_init</STRONG> (Thumb, 644 bytes, Stack size 184 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[af]"></a>mt9v03x_set_config</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, zf_device_mt9v03x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = mt9v03x_set_config &rArr; system_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[b0]"></a>mt9v03x_get_config</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, zf_device_mt9v03x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = mt9v03x_get_config &rArr; system_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[b1]"></a>mt9v03x_get_version</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, zf_device_mt9v03x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mt9v03x_get_version &rArr; system_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[b2]"></a>mt9v03x_set_exposure_time</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, zf_device_mt9v03x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>

<P><STRONG><a name="[b3]"></a>mt9v03x_set_reg</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, zf_device_mt9v03x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>

<P><STRONG><a name="[b4]"></a>mt9v03x_init</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, zf_device_mt9v03x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = mt9v03x_init &rArr; camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_camera_type
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_config
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_config
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>tft180_clear</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tft180_clear &rArr; tft180_set_region &rArr; tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>tft180_full</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tft180_full &rArr; tft180_set_region &rArr; tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowImage
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRP
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[14a]"></a>tft180_set_dir</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_device_tft180.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>tft180_set_color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_device_tft180.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>tft180_draw_point</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_wave
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_r
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_lr
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_l
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_down
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_hang
</UL>

<P><STRONG><a name="[ba]"></a>tft180_draw_line</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>

<P><STRONG><a name="[bc]"></a>tft180_show_char</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
</UL>

<P><STRONG><a name="[53]"></a>tft180_show_string</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_uint
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_int
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestBench
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRP
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DipState
</UL>
<BR>[Address Reference Count : 4]<UL><LI> ctrl.o(.text)
<LI> zf_device_tft180.o(.text)
<LI> menu.o(.text)
<LI> main.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>tft180_show_int</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_str
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[c0]"></a>tft180_show_uint</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint_to_str
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigInt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFloat
</UL>

<P><STRONG><a name="[5a]"></a>tft180_show_float</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = tft180_show_float &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>tft180_show_binary_image</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>

<P><STRONG><a name="[c3]"></a>tft180_show_gray_image</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = tft180_show_gray_image &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowImage
</UL>

<P><STRONG><a name="[c4]"></a>tft180_show_rgb565_image</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>

<P><STRONG><a name="[c5]"></a>tft180_show_wave</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>

<P><STRONG><a name="[c6]"></a>tft180_show_chinese</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, zf_device_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>

<P><STRONG><a name="[c7]"></a>tft180_init</STRONG> (Thumb, 820 bytes, Stack size 56 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = tft180_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_struct_init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>set_camera_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_device_type.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[ca]"></a>camera_uart_handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, zf_device_type.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_uart_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>camera_vsync_handler</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, zf_device_type.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_vsync_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_count
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[cf]"></a>camera_dma_handler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, zf_device_type.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_dma_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>set_wireless_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_device_type.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_init
</UL>

<P><STRONG><a name="[d0]"></a>wireless_module_uart_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_device_type.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wireless_module_uart_handler &rArr; bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
</UL>

<P><STRONG><a name="[d2]"></a>wireless_uart_send_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>

<P><STRONG><a name="[d3]"></a>wireless_uart_send_buff</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_image
</UL>

<P><STRONG><a name="[d4]"></a>wireless_uart_send_string</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[d5]"></a>wireless_uart_send_image</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_buff
</UL>

<P><STRONG><a name="[d6]"></a>wireless_uart_read_buff</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[d1]"></a>wireless_uart_callback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, zf_device_wireless_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wireless_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>

<P><STRONG><a name="[d7]"></a>wireless_uart_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, zf_device_wireless_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wireless_type
</UL>

<P><STRONG><a name="[4d]"></a>system_delay</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, zf_driver_delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = system_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_byte
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_buff
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_reg
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_exposure_time
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_config
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_string
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_byte
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_buff
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 4]<UL><LI> zf_device_gps_tau1201.o(.text)
<LI> ctrl.o(.text)
<LI> zf_device_tft180.o(.text)
<LI> main.o(.text)
</UL>
<P><STRONG><a name="[cd]"></a>dma_set_count</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_driver_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>

<P><STRONG><a name="[ce]"></a>dma_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>

<P><STRONG><a name="[cc]"></a>dma_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_handler
</UL>

<P><STRONG><a name="[9a]"></a>dma_camera_init</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, zf_driver_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_camera_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[d9]"></a>encoder_get_count</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, zf_driver_encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = encoder_get_count
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[eb]"></a>encoder_clear_count</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, zf_driver_encoder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>encoder_quad_init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, zf_driver_encoder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
</UL>

<P><STRONG><a name="[de]"></a>encoder_dir_init</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, zf_driver_encoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = encoder_dir_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
</UL>

<P><STRONG><a name="[14c]"></a>exti_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_driver_exti.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>exti_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_driver_exti.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>exti_init</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, zf_driver_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = exti_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[e0]"></a>flash_check</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page
</UL>

<P><STRONG><a name="[e1]"></a>flash_erase_page</STRONG> (Thumb, 128 bytes, Stack size 4 bytes, zf_driver_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page
</UL>

<P><STRONG><a name="[14e]"></a>flash_read_page</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_driver_flash.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>flash_write_page</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, zf_driver_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
</UL>

<P><STRONG><a name="[ff]"></a>flash_read_page_to_buffer</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[e2]"></a>flash_write_page_from_buffer</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, zf_driver_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
</UL>

<P><STRONG><a name="[e3]"></a>flash_buffer_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, zf_driver_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>

<P><STRONG><a name="[ee]"></a>gpio_set_level</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>gpio_get_level</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_string
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_byte
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_buff
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_string
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_byte
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_buff
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_get_count
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncValue
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DipHandler
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DipState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grayscale_sensor.o(.text)
</UL>
<P><STRONG><a name="[14f]"></a>gpio_toggle_level</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>gpio_set_dir</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>gpio_init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, zf_driver_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 3]<UL><LI> zf_device_tft180.o(.text)
<LI> grayscale_sensor.o(.text)
<LI> main.o(.text)
</UL>
<P><STRONG><a name="[dd]"></a>afio_init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, zf_driver_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_quad_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[10b]"></a>pit_enable</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zf_driver_pit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[151]"></a>pit_disable</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, zf_driver_pit.o(.text), UNUSED)

<P><STRONG><a name="[e4]"></a>pit_init</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, zf_driver_pit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = pit_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>pwm_set_duty</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, zf_driver_pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ctrl.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>pwm_init</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, zf_driver_pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = pwm_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ctrl.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>spi_write_8bit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zf_driver_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_write_index
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text)
</UL>
<P><STRONG><a name="[152]"></a>spi_write_8bit_array</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>spi_write_16bit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, zf_driver_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_wave
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_rgb565_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_chinese
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_binary_image
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
</UL>

<P><STRONG><a name="[153]"></a>spi_write_16bit_array</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>spi_write_8bit_register</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>spi_write_8bit_registers</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[156]"></a>spi_write_16bit_register</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>spi_write_16bit_registers</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>spi_read_8bit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>spi_read_8bit_array</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>spi_read_16bit</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>spi_read_16bit_array</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15c]"></a>spi_read_8bit_register</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>spi_read_8bit_registers</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>spi_read_16bit_register</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>spi_read_16bit_registers</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>spi_transfer_8bit</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>spi_transfer_16bit</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, zf_driver_spi.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>spi_init</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, zf_driver_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
</UL>

<P><STRONG><a name="[db]"></a>timer_funciton_check</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_quad_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[dc]"></a>timer_clock_enable</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, zf_driver_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_quad_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
</UL>

<P><STRONG><a name="[162]"></a>timer_start</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zf_driver_timer.o(.text), UNUSED)

<P><STRONG><a name="[163]"></a>timer_stop</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zf_driver_timer.o(.text), UNUSED)

<P><STRONG><a name="[164]"></a>timer_get</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, zf_driver_timer.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>timer_clear</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, zf_driver_timer.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>timer_init</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, zf_driver_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
</UL>

<P><STRONG><a name="[9b]"></a>timer_etr_init</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, zf_driver_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[64]"></a>uart_write_byte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_driver_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_byte
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_byte
</UL>

<P><STRONG><a name="[4e]"></a>uart_write_buffer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, zf_driver_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_send_image
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_string
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_buff
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_reg
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_exposure_time
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_set_config
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_config
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_string
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_buff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_gps_tau1201.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>uart_write_string</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, zf_driver_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_write_string
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_str_output
</UL>

<P><STRONG><a name="[166]"></a>uart_read_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_driver_uart.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>uart_query_byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_driver_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_uart_handler
</UL>

<P><STRONG><a name="[e7]"></a>uart_tx_interrupt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zf_driver_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_disable
</UL>

<P><STRONG><a name="[96]"></a>uart_rx_interrupt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, zf_driver_uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_init
</UL>

<P><STRONG><a name="[6d]"></a>uart_init</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, zf_driver_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_mm32f3277g.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>MotorInit</STRONG> (Thumb, 360 bytes, Stack size 32 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = MotorInit &rArr; encoder_dir_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_set_priority
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_dir_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>GetDistance</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDistance &rArr; encoder_get_count
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_get_count
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_clear_count
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
</UL>

<P><STRONG><a name="[ec]"></a>DipHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DipHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>GetDirError</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ctrl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
</UL>

<P><STRONG><a name="[ed]"></a>ReverseStallParking</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = ReverseStallParking &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
</UL>

<P><STRONG><a name="[f1]"></a>ParallelReverseParking</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = ParallelReverseParking &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
</UL>

<P><STRONG><a name="[f2]"></a>ParkingHandler</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ParkingHandler &rArr; ReverseStallParking &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDirError
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[f4]"></a>ServoControl</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ServoControl &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
</UL>

<P><STRONG><a name="[f6]"></a>SpeedControl</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = SpeedControl &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_get_count
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_clear_count
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[f8]"></a>SyncValue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, easy_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyncValue
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[fa]"></a>PressCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, easy_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[fb]"></a>HoldCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, easy_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[fc]"></a>MultiClickCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, easy_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[59]"></a>EasyKeyInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, easy_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EasyKeyInit &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>EasyKeyHandler</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, easy_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EasyKeyHandler &rArr; SyncValue
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncValue
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressCallback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiClickCallback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoldCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>GrayScaleSensorInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, grayscale_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GrayScaleSensorInit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>ReadGrayScaleSensor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, grayscale_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadGrayScaleSensor
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[11b]"></a>ImageBinarization</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, image_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ImageBinarization
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>FiltrateImage</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, image_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FiltrateImage
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11d]"></a>FindBottomEdge</STRONG> (Thumb, 78 bytes, Stack size 28 bytes, image_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FindBottomEdge
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>FindTSign</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, image_process.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FindTSign &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fe]"></a>MenuInit</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = MenuInit &rArr; pit_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_set_priority
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_page_to_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>ShowMenuMainPage</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ShowMenuMainPage
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[100]"></a>ConfigFloat</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_uint
</UL>

<P><STRONG><a name="[101]"></a>ConfigInt</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = ConfigInt &rArr; tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_uint
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRP
</UL>

<P><STRONG><a name="[102]"></a>RSP</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = RSP &rArr; tft180_show_float &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[103]"></a>PRP</STRONG> (Thumb, 480 bytes, Stack size 48 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = PRP &rArr; ConfigInt &rArr; tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[104]"></a>TAT</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = TAT &rArr; tft180_show_float &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigInt
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[105]"></a>DipState</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
</UL>

<P><STRONG><a name="[106]"></a>ShowImage</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = ShowImage &rArr; lcd_draw_Ts &rArr; lcd_drawpoints_big_around &rArr; tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_Ts
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
</UL>

<P><STRONG><a name="[109]"></a>MenuOperator</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = MenuOperator &rArr; PRP &rArr; ConfigInt &rArr; tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMenuMainPage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowImage
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRP
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>TestBench</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
</UL>

<P><STRONG><a name="[57]"></a>PidInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PidInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ctrl.o(.text)
</UL>
<P><STRONG><a name="[10d]"></a>ConfigIntegral</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ConfigIntegral &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
</UL>

<P><STRONG><a name="[f7]"></a>PidIncControl</STRONG> (Thumb, 312 bytes, Stack size 64 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = PidIncControl &rArr; ConfigIntegral &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
</UL>

<P><STRONG><a name="[f5]"></a>PidPosControl</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = PidPosControl &rArr; ConfigIntegral &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmplt
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServoControl
</UL>

<P><STRONG><a name="[111]"></a>lcd_drawpoints_big_around</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, user_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lcd_drawpoints_big_around &rArr; tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_Ts
</UL>

<P><STRONG><a name="[112]"></a>lcd_drawpoints_big_down</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, user_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lcd_drawpoints_big_down &rArr; tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
</UL>

<P><STRONG><a name="[107]"></a>lcd_draw_bottomline</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, user_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = lcd_draw_bottomline &rArr; lcd_drawpoints_big_down &rArr; tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_down
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowImage
</UL>

<P><STRONG><a name="[108]"></a>lcd_draw_Ts</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, user_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = lcd_draw_Ts &rArr; lcd_drawpoints_big_around &rArr; tft180_draw_point &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowImage
</UL>

<P><STRONG><a name="[113]"></a>lcd_drawpoints_big_r</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>

<P><STRONG><a name="[114]"></a>lcd_drawpoints_big_l</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>

<P><STRONG><a name="[115]"></a>lcd_drawpoints_big_lr</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr2
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr
</UL>

<P><STRONG><a name="[116]"></a>lcd_drawline_lie_big_lr</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_lr
</UL>

<P><STRONG><a name="[117]"></a>lcd_drawline_lie_big_lr2</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_lr
</UL>

<P><STRONG><a name="[118]"></a>lcd_drawline_hang</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_tft180.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
</UL>

<P><STRONG><a name="[21]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM4_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = TIM6_IRQHandler &rArr; SpeedControl &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_get_count
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encoder_clear_count
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = TIM7_IRQHandler &rArr; ParkingHandler &rArr; ReverseStallParking &rArr; pwm_set_duty &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIM8_UP_IRQHandler &rArr; EasyKeyHandler &rArr; SyncValue
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadGrayScaleSensor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART4_IRQHandler &rArr; gps_uart_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART6_IRQHandler &rArr; wireless_module_uart_handler &rArr; bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART8_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART8_IRQHandler &rArr; camera_uart_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_uart_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler &rArr; camera_vsync_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, isr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler &rArr; camera_dma_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 324 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = main &rArr; MenuOperator &rArr; PRP &rArr; ConfigInt &rArr; tft180_show_uint &rArr; tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ImageBinarization
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTSign
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindBottomEdge
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FiltrateImage
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrayScaleSensorInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorInit
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DipHandler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperator
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_init
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[167]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_uint
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_int
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_buffer_clear
</UL>

<P><STRONG><a name="[168]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
</UL>

<P><STRONG><a name="[169]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a5]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_float_number
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_double_number
</UL>

<P><STRONG><a name="[ae]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parameter_index
</UL>

<P><STRONG><a name="[66]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_send_string
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_send_string
</UL>

<P><STRONG><a name="[a4]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFloat
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFloat
</UL>

<P><STRONG><a name="[123]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[128]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTSign
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr2
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr2
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
</UL>

<P><STRONG><a name="[110]"></a>__aeabi_fcmplt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmplt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigIntegral
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_fcmpeq</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpeq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_dcmpge</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpge.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpgt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, dcmpeq.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_float
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAT
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RSP
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRP
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTSign
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr2
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;float_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_float
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_line
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedControl
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidPosControl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PidIncControl
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParkingHandler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_Ts
</UL>

<P><STRONG><a name="[e5]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_set_duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;double_to_str
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[f0]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawpoints_big_around
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr2
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_bottomline
</UL>

<P><STRONG><a name="[ef]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_drawline_lie_big_lr
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_float_number
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindTSign
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReverseStallParking
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParallelReverseParking
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[124]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[16b]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[16c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[125]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[16d]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[121]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[127]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[126]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[130]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[16f]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[13c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[170]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[171]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[12c]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[172]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[6a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_log_handler
</UL>

<P><STRONG><a name="[12e]"></a>__0sprintf$3</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[173]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[67]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[134]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[12f]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[131]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[132]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[133]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[136]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[137]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[138]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[135]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[174]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[175]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[176]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[13a]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[9f]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
</UL>

<P><STRONG><a name="[13b]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, atan.o(i.atan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[a1]"></a>atan2</STRONG> (Thumb, 374 bytes, Stack size 32 bytes, atan2.o(i.atan2), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_azimuth
</UL>

<P><STRONG><a name="[4b]"></a>cos</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_gps_tau1201.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_gps_tau1201.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_two_points_distance
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>debug_uart_str_output</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_common_debug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = debug_uart_str_output &rArr; uart_write_string
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_common_debug.o(.text)
</UL>
<P><STRONG><a name="[8a]"></a>number_conversion_ascii</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
</UL>

<P><STRONG><a name="[8b]"></a>printf_reverse_order</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_common_function.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zf_sprintf
</UL>

<P><STRONG><a name="[a8]"></a>get_double_number</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parameter_index
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
</UL>

<P><STRONG><a name="[a7]"></a>get_float_number</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, zf_device_gps_tau1201.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_double
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_parameter_index
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
</UL>

<P><STRONG><a name="[4c]"></a>get_parameter_index</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, zf_device_gps_tau1201.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_parameter_index
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_parse
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_float_number
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_double_number
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_gps_tau1201.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>tft180_set_region</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tft180_set_region &rArr; tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_write_index
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_wave
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_rgb565_image
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_chinese
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_binary_image
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_full
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_draw_point
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
</UL>

<P><STRONG><a name="[54]"></a>tft180_write_index</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, zf_device_tft180.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>

<P><STRONG><a name="[5e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
